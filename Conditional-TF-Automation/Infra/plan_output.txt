[0m[1mmodule.virtualMachine.data.azurerm_ssh_public_key.maaz_pubic_key: Reading...[0m[0m
[0m[1mmodule.virtualMachine.data.azurerm_resource_group.maaz_rg: Reading...[0m[0m
[0m[1mmodule.virtualMachine.data.azurerm_ssh_public_key.maaz_pubic_key: Read complete after 1s [id=/subscriptions/664b6097-19f2-42a3-be95-a4a6b4069f6b/resourceGroups/sa1_test_eic_MaazPatel/providers/Microsoft.Compute/sshPublicKeys/maaz_id_rsa][0m
[0m[1mmodule.virtualMachine.data.azurerm_resource_group.maaz_rg: Read complete after 1s [id=/subscriptions/664b6097-19f2-42a3-be95-a4a6b4069f6b/resourceGroups/sa1_test_eic_MaazPatel][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.virtualMachine.azurerm_linux_virtual_machine.testingEvn_linux_vm[0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "testingEvn_linux_vm" {
      [32m+[0m[0m admin_username                  = "adminuser-maaz"
      [32m+[0m[0m allow_extension_operations      = true
      [32m+[0m[0m computer_name                   = (known after apply)
      [32m+[0m[0m disable_password_authentication = true
      [32m+[0m[0m extensions_time_budget          = "PT1H30M"
      [32m+[0m[0m id                              = (known after apply)
      [32m+[0m[0m location                        = "southeastasia"
      [32m+[0m[0m max_bid_price                   = -1
      [32m+[0m[0m name                            = "testingEvnLinux-vm"
      [32m+[0m[0m network_interface_ids           = (known after apply)
      [32m+[0m[0m patch_assessment_mode           = "ImageDefault"
      [32m+[0m[0m patch_mode                      = "ImageDefault"
      [32m+[0m[0m platform_fault_domain           = -1
      [32m+[0m[0m priority                        = "Regular"
      [32m+[0m[0m private_ip_address              = (known after apply)
      [32m+[0m[0m private_ip_addresses            = (known after apply)
      [32m+[0m[0m provision_vm_agent              = true
      [32m+[0m[0m public_ip_address               = (known after apply)
      [32m+[0m[0m public_ip_addresses             = (known after apply)
      [32m+[0m[0m resource_group_name             = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m size                            = "Standard_D2s_v3"
      [32m+[0m[0m tags                            = {
          [32m+[0m[0m "Business_Unit"     = "einfochips"
          [32m+[0m[0m "Create_Date"       = "13 June 2024"
          [32m+[0m[0m "Delivery_Manager"  = "Shriram Deshpande"
          [32m+[0m[0m "Project_Name"      = "Training and learning"
          [32m+[0m[0m "Resource_Owner"    = "Maaz"
          [32m+[0m[0m "Sub_Business_Unit" = "PES-IA"
        }
      [32m+[0m[0m virtual_machine_id              = (known after apply)

      [32m+[0m[0m admin_ssh_key {
          [32m+[0m[0m public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDxsEudJk0d3k0vNv96s8XwMyA1c4+Uz5fAsN8KrkC+E3auML2GUVVASbgOeIYBCXt63wTWmaCnbr2/F3BpTUT36Zwii7PJJ8YjDS0V5eVmJl9sFkerWPUWxVrzRcdJFzC33y9sm/H0bx9XUp+jRI3EdBYTXmNEbZZ+kLksVWCyhk895y/HPCN0urobiXg7INwSV/HrQZTJSxxtVU/tAKkQiGxhJK3rCbdA7bOjnl/1oUrvdKp5iPIDyq6uCeaZPV+jrKO4mk1XYJT3C5pK8WneN1cDNaOw0uB8THED56PLjpTw2rekFpgPpWZ39dLh1ro8zI7SL3b1GO9a0r8DeyFuvoULdEdMuQZzs3Enkrxge3NpPBRhXhJOE+I5+6Wmv/w43zTaoxj4xjzyid9I4AvAuKR2AInLBc8HSlDtaKx4i5dgLSYQ4OJetJWR3ftdaIgWe31Sr0HlRcdFBgic4lvyxgdqvKhex7YRnJOUqCsZGN+lFw5G/FO/EKqQqztLqlU= generated-by-azure"
          [32m+[0m[0m username   = "adminuser-maaz"
        }

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m name                      = (known after apply)
          [32m+[0m[0m storage_account_type      = "StandardSSD_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m source_image_reference {
          [32m+[0m[0m offer     = "0001-com-ubuntu-server-jammy"
          [32m+[0m[0m publisher = "Canonical"
          [32m+[0m[0m sku       = "22_04-lts"
          [32m+[0m[0m version   = "latest"
        }
    }

[1m  # module.virtualMachine.azurerm_network_interface.testingEvn_nic[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "testingEvn_nic" {
      [32m+[0m[0m applied_dns_servers           = (known after apply)
      [32m+[0m[0m dns_servers                   = (known after apply)
      [32m+[0m[0m enable_accelerated_networking = false
      [32m+[0m[0m enable_ip_forwarding          = false
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m internal_dns_name_label       = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix   = (known after apply)
      [32m+[0m[0m location                      = "southeastasia"
      [32m+[0m[0m mac_address                   = (known after apply)
      [32m+[0m[0m name                          = "maaz_terraform-nic"
      [32m+[0m[0m private_ip_address            = (known after apply)
      [32m+[0m[0m private_ip_addresses          = (known after apply)
      [32m+[0m[0m resource_group_name           = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m virtual_machine_id            = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "my_nic_internal"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m public_ip_address_id                               = (known after apply)
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # module.virtualMachine.azurerm_network_security_group.testingEvn_nsg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "testingEvn_nsg" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "southeastasia"
      [32m+[0m[0m name                = "myTestingEnvNetworkSecurityGroup"
      [32m+[0m[0m resource_group_name = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m description                                = ""
              [32m+[0m[0m destination_address_prefix                 = "*"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "80"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "HTTP"
              [32m+[0m[0m priority                                   = 100
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "*"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
            },
        ]
    }

[1m  # module.virtualMachine.azurerm_public_ip.testingEvn_public_ip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "testingEvn_public_ip" {
      [32m+[0m[0m allocation_method       = "Dynamic"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "southeastasia"
      [32m+[0m[0m name                    = "example-public-ip"
      [32m+[0m[0m resource_group_name     = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m sku                     = "Basic"
      [32m+[0m[0m sku_tier                = "Regional"
    }

[1m  # module.virtualMachine.azurerm_subnet.testing_subnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "testing_subnet" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "example-vm-subnet"
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m virtual_network_name                           = "example-vm-vnet"
    }

[1m  # module.virtualMachine.azurerm_virtual_network.testing_vnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "testing_vnet" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "southeastasia"
      [32m+[0m[0m name                = "example-vm-vnet"
      [32m+[0m[0m resource_group_name = "sa1_test_eic_MaazPatel"
      [32m+[0m[0m subnet              = (known after apply)
    }

[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: tfplan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan.out"
